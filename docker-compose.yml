services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: nse_trading_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Django Web Application
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development
      # Explicitly define individual DB environment variables
      - DB_NAME=nse_trading_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db # <--- This is the crucial change for the web service
      - DB_PORT=5432
      # Also ensure Celery broker/backend URLs correctly point to 'redis'
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0 # Added for completeness if not already there
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker - Data Collection
  celery-data:
    build: .
    command: celery -A config worker -Q data_collection -l info --concurrency=2
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DB_NAME=nse_trading_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db # Ensure this is also 'db' for all Celery workers
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  # Celery Worker - Analysis
  celery-analysis:
    build: .
    command: celery -A config worker -Q analysis -l info --concurrency=2
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DB_NAME=nse_trading_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  # Celery Worker - Trading
  celery-trading:
    build: .
    command: celery -A config worker -Q trading -l info --concurrency=1
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DB_NAME=nse_trading_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  # Celery Worker - Events
  celery-events:
    build: .
    command: celery -A config worker -Q events -l info --concurrency=1
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DB_NAME=nse_trading_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  # Celery Beat Scheduler
  celery-beat:
    build: .
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DB_NAME=nse_trading_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  # Celery Flower (Monitoring)
  flower:
    build: .
    command: celery -A config flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
    environment:
      # Flower only needs the broker URL
      - CELERY_BROKER_URL=redis://redis:6379/0

volumes:
  postgres_data:
